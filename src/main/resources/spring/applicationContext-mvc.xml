<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:spring-configured/>
	<!-- 定义控制器注解扫描包路径，控制器注解为 @Controller -->
	<mvc:annotation-driven/>

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.doubleant.externalws" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- MappingJacksonHttpMessageConverter 会将对象转换为 JSON 输出 -->
	<bean id="mappingJacksonHttpMessageConverter"
		  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
				<value>application/text;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 手动的注解映射的支持-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter"/><!-- json转换器 -->
			</list>
		</property>
	</bean>

	<!-- 针对controller的spring aop配置，如果是非controller的类，则要写在spring的配置文件里 -->
	<!-- 基于@AspectJ切面的schema驱动器，使用了该方法后可以将上面的自动代理创建器AnnotationAwareAspectJAutoProxyCreator从配置中去除 -->

	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy/>
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<mvc:default-servlet-handler/>

	<!-- 控制器异常处理 -->
	<bean id="exceptionHandlerExceptionResolver"
		  class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>

	<!--对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/content/"/>
		<property name="suffix" value=".jsp"/>
		<!-- 如果使用jstl的话，配置下面的属性 -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	</bean>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

</beans>
